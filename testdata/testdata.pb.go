// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testdata.proto

package testdata

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Test_State int32

const (
	Test_UNKNOWN Test_State = 0
	Test_KNOWN   Test_State = 1
)

var Test_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "KNOWN",
}

var Test_State_value = map[string]int32{
	"UNKNOWN": 0,
	"KNOWN":   1,
}

func (x Test_State) String() string {
	return proto.EnumName(Test_State_name, int32(x))
}

func (Test_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_40c4782d007dfce9, []int{0, 0}
}

type Test struct {
	Uint32F     uint32           `protobuf:"varint,1,opt,name=uint32_f,json=uint32F,proto3" json:"uint32_f,omitempty"`
	StringSlice []string         `protobuf:"bytes,2,rep,name=string_slice,json=stringSlice,proto3" json:"string_slice,omitempty"`
	Kv          map[string]int32 `protobuf:"bytes,3,rep,name=kv,proto3" json:"kv,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Buf         []byte           `protobuf:"bytes,4,opt,name=buf,proto3" json:"buf,omitempty"`
	State       Test_State       `protobuf:"varint,5,opt,name=state,proto3,enum=Test_State" json:"state,omitempty"`
	// Types that are valid to be assigned to Oneofer:
	//	*Test_One
	//	*Test_Two
	Oneofer              isTest_Oneofer `protobuf_oneof:"oneofer"`
	Inner                *Test_Inner    `protobuf:"bytes,8,opt,name=inner,proto3" json:"inner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c4782d007dfce9, []int{0}
}

func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (m *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(m, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

func (m *Test) GetUint32F() uint32 {
	if m != nil {
		return m.Uint32F
	}
	return 0
}

func (m *Test) GetStringSlice() []string {
	if m != nil {
		return m.StringSlice
	}
	return nil
}

func (m *Test) GetKv() map[string]int32 {
	if m != nil {
		return m.Kv
	}
	return nil
}

func (m *Test) GetBuf() []byte {
	if m != nil {
		return m.Buf
	}
	return nil
}

func (m *Test) GetState() Test_State {
	if m != nil {
		return m.State
	}
	return Test_UNKNOWN
}

type isTest_Oneofer interface {
	isTest_Oneofer()
}

type Test_One struct {
	One string `protobuf:"bytes,6,opt,name=one,proto3,oneof"`
}

type Test_Two struct {
	Two string `protobuf:"bytes,7,opt,name=two,proto3,oneof"`
}

func (*Test_One) isTest_Oneofer() {}

func (*Test_Two) isTest_Oneofer() {}

func (m *Test) GetOneofer() isTest_Oneofer {
	if m != nil {
		return m.Oneofer
	}
	return nil
}

func (m *Test) GetOne() string {
	if x, ok := m.GetOneofer().(*Test_One); ok {
		return x.One
	}
	return ""
}

func (m *Test) GetTwo() string {
	if x, ok := m.GetOneofer().(*Test_Two); ok {
		return x.Two
	}
	return ""
}

func (m *Test) GetInner() *Test_Inner {
	if m != nil {
		return m.Inner
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Test) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Test_One)(nil),
		(*Test_Two)(nil),
	}
}

type Test_Inner struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test_Inner) Reset()         { *m = Test_Inner{} }
func (m *Test_Inner) String() string { return proto.CompactTextString(m) }
func (*Test_Inner) ProtoMessage()    {}
func (*Test_Inner) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c4782d007dfce9, []int{0, 0}
}

func (m *Test_Inner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_Inner.Unmarshal(m, b)
}
func (m *Test_Inner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_Inner.Marshal(b, m, deterministic)
}
func (m *Test_Inner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_Inner.Merge(m, src)
}
func (m *Test_Inner) XXX_Size() int {
	return xxx_messageInfo_Test_Inner.Size(m)
}
func (m *Test_Inner) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_Inner.DiscardUnknown(m)
}

var xxx_messageInfo_Test_Inner proto.InternalMessageInfo

func (m *Test_Inner) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func init() {
	proto.RegisterEnum("Test_State", Test_State_name, Test_State_value)
	proto.RegisterType((*Test)(nil), "Test")
	proto.RegisterMapType((map[string]int32)(nil), "Test.KvEntry")
	proto.RegisterType((*Test_Inner)(nil), "Test.Inner")
}

func init() { proto.RegisterFile("testdata.proto", fileDescriptor_40c4782d007dfce9) }

var fileDescriptor_40c4782d007dfce9 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x90, 0xc1, 0x6b, 0xc2, 0x30,
	0x14, 0xc6, 0x4d, 0x6b, 0x8c, 0x7d, 0x55, 0x91, 0xb0, 0x43, 0x26, 0x8c, 0x45, 0x4f, 0x39, 0x79,
	0x50, 0x06, 0x63, 0xc7, 0xc1, 0xc6, 0x86, 0xe0, 0x20, 0x6e, 0xec, 0x28, 0x75, 0xc6, 0x51, 0x94,
	0x64, 0xb4, 0xaf, 0x15, 0xff, 0xe4, 0xfd, 0x17, 0x23, 0xcd, 0x7a, 0xfb, 0xbe, 0xdf, 0x4b, 0x3e,
	0xbe, 0xf7, 0x60, 0x84, 0xa6, 0xc4, 0x7d, 0x86, 0xd9, 0xfc, 0xa7, 0x70, 0xe8, 0x66, 0xbf, 0x11,
	0x74, 0xdf, 0x4d, 0x89, 0xfc, 0x1a, 0xfa, 0x55, 0x6e, 0x71, 0xb9, 0xd8, 0x1e, 0x04, 0x91, 0x44,
	0x0d, 0x35, 0x0b, 0xfe, 0x99, 0x4f, 0x61, 0x50, 0x62, 0x91, 0xdb, 0xef, 0x6d, 0x79, 0xca, 0xbf,
	0x8c, 0x88, 0x64, 0xac, 0x12, 0x9d, 0x06, 0xb6, 0xf1, 0x88, 0xdf, 0x40, 0x74, 0xac, 0x45, 0x2c,
	0x63, 0x95, 0x2e, 0x86, 0x73, 0x1f, 0x38, 0x5f, 0xd5, 0x4f, 0x16, 0x8b, 0x8b, 0x8e, 0x8e, 0x35,
	0x1f, 0x43, 0xbc, 0xab, 0x0e, 0xa2, 0x2b, 0x89, 0x1a, 0x68, 0x2f, 0xf9, 0x14, 0x68, 0x89, 0x19,
	0x1a, 0x41, 0x25, 0x51, 0xa3, 0x45, 0x1a, 0xfe, 0x6c, 0x3c, 0xd2, 0x61, 0xc2, 0x39, 0xc4, 0xce,
	0x1a, 0xd1, 0x93, 0x44, 0x25, 0x2f, 0x1d, 0xed, 0x8d, 0x67, 0x78, 0x76, 0x82, 0xb5, 0x0c, 0xcf,
	0xce, 0x47, 0xe5, 0xd6, 0x9a, 0x42, 0xf4, 0x25, 0x51, 0x69, 0x1b, 0xf5, 0xea, 0x91, 0x0e, 0x93,
	0xc9, 0x14, 0x68, 0xe3, 0xb9, 0x00, 0x66, 0x6c, 0xb6, 0x3b, 0x99, 0x7d, 0xb3, 0x64, 0x5f, 0xb7,
	0x76, 0x72, 0x07, 0xec, 0xbf, 0xb1, 0x6f, 0x7b, 0x34, 0x97, 0xe6, 0x41, 0xa2, 0xbd, 0xe4, 0x57,
	0x40, 0xeb, 0xec, 0x54, 0xf9, 0xd5, 0x89, 0xa2, 0x3a, 0x98, 0x87, 0xe8, 0x9e, 0xcc, 0x6e, 0x81,
	0x36, 0xa5, 0x79, 0x0a, 0xec, 0x63, 0xbd, 0x5a, 0xbf, 0x7d, 0xae, 0xc7, 0x1d, 0x9e, 0x00, 0x0d,
	0x92, 0x3c, 0x26, 0xc0, 0x9c, 0x35, 0xee, 0x60, 0x8a, 0x5d, 0xaf, 0x39, 0xf9, 0xf2, 0x2f, 0x00,
	0x00, 0xff, 0xff, 0x78, 0xdc, 0xe0, 0x9d, 0x84, 0x01, 0x00, 0x00,
}
